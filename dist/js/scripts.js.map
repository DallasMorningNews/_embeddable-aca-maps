{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/ev-emitter/ev-emitter.js","node_modules/imagesloaded/imagesloaded.js","node_modules/pym.js/dist/pym.v1.js","src/js/scripts.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","global","factory","define","amd","EvEmitter","window","this","proto","prototype","on","eventName","listener","events","_events","listeners","indexOf","push","once","onceEvents","_onceEvents","off","index","splice","emitEvent","args","onceListeners","isOnce","apply","imagesLoaded","extend","b","prop","makeArray","obj","ary","Array","isArray","ImagesLoaded","elem","options","onAlways","document","querySelectorAll","elements","getImages","$","jqDeferred","Deferred","setTimeout","check","bind","LoadingImage","img","Background","url","element","Image","jQuery","console","Object","create","images","forEach","addElementImages","nodeName","addImage","background","addElementBackgroundImages","nodeType","elementNodeTypes","childImgs","children","child","9","11","style","getComputedStyle","reURL","matches","exec","backgroundImage","addBackground","loadingImage","onProgress","image","message","_this","progress","progressedCount","hasAnyBroken","complete","isLoaded","notify","debug","log","isComplete","jqMethod","getIsImageComplete","confirm","naturalWidth","proxyImage","addEventListener","src","undefined","handleEvent","event","method","type","onload","unbindEvents","onerror","removeEventListener","makeJQueryPlugin","fn","callback","promise","pym","lib","_raiseCustomEvent","createEvent","initEvent","dispatchEvent","_getParameterByName","name","regex","RegExp","replace","results","location","search","decodeURIComponent","_isSafeMessage","settings","xdomain","origin","match","_makeMessage","id","messageType","join","_makeMessageRegex","bits","_cleanAutoInitInstances","autoInitInstances","idx","instance","el","getElementsByTagName","contentWindow","autoInit","doNotRaiseEvents","setAttribute","getAttribute","title","sandbox","allowfullscreen","parenturlparam","parenturlvalue","optionalparams","config","attribute","err","parent","Parent","getElementById","iframe","href","messageRegex","messageHandlers","_constructIframe","width","offsetWidth","toString","createElement","hash","hashIndex","substring","encodeURIComponent","firstChild","removeChild","appendChild","_onResize","sendWidth","_fire","remove","_processMessage","data","_onHeightMessage","height","parseInt","_onNavigateToMessage","_onScrollToChildPosMessage","iframePos","getBoundingClientRect","top","pageYOffset","totalOffset","scrollTo","onMessage","sendMessage","postMessage","key","Child","parentWidth","parentTitle","parentUrl","renderCallback","polling","timerId","_onWidthMessage","sendHeight","offsetHeight","scrollParentTo","navigateParentTo","scrollParentToChildEl","topPos","scrollParentToChildPos","pos","clearInterval","setInterval","onMarkedEmbeddedStatus","newClassForHtml","htmlElement","originalHtmlClasses","className","self","_imagesloaded","_pym","pymChild","_pym2","default","_imagesloaded2"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,QAAAU,OAAAJ,UCQA,SAAAK,OAAAC,SAGA,kBAAAC,SAAAA,OAAAC,IAEAD,OAAAD,SACA,gBAAAF,SAAAA,OAAAJ,QAEAI,OAAAJ,QAAAM,UAGAD,OAAAI,UAAAH,WAGA,mBAAAI,QAAAA,OAAAC,KAAA,WAEA,YAEA,SAAAF,cAEA,GAAAG,OAAAH,UAAAI,SA8EA,OA5EAD,OAAAE,GAAA,SAAAC,UAAAC,UACA,GAAAD,WAAAC,SAAA,CAIA,GAAAC,QAAAN,KAAAO,QAAAP,KAAAO,YAEAC,UAAAF,OAAAF,WAAAE,OAAAF,cAMA,OAJAI,WAAAC,QAAAJ,YAAA,GACAG,UAAAE,KAAAL,UAGAL,OAGAC,MAAAU,KAAA,SAAAP,UAAAC,UACA,GAAAD,WAAAC,SAAA,CAIAL,KAAAG,GAAAC,UAAAC,SAGA,IAAAO,YAAAZ,KAAAa,YAAAb,KAAAa,eAMA,QAJAD,WAAAR,WAAAQ,WAAAR,gBAEAC,WAAA,EAEAL,OAGAC,MAAAa,IAAA,SAAAV,UAAAC,UACA,GAAAG,WAAAR,KAAAO,SAAAP,KAAAO,QAAAH,UACA,IAAAI,WAAAA,UAAAjB,OAAA,CAGA,GAAAwB,OAAAP,UAAAC,QAAAJ,SAKA,OAJAU,SAAA,GACAP,UAAAQ,OAAAD,MAAA,GAGAf,OAGAC,MAAAgB,UAAA,SAAAb,UAAAc,MACA,GAAAV,WAAAR,KAAAO,SAAAP,KAAAO,QAAAH,UACA,IAAAI,WAAAA,UAAAjB,OAAA,CAGA,GAAAP,GAAA,EACAqB,SAAAG,UAAAxB,EACAkC,MAAAA,QAIA,KAFA,GAAAC,eAAAnB,KAAAa,aAAAb,KAAAa,YAAAT,WAEAC,UAAA,CACA,GAAAe,QAAAD,eAAAA,cAAAd,SACAe,UAGApB,KAAAc,IAAAV,UAAAC,gBAEAc,eAAAd,WAGAA,SAAAgB,MAAArB,KAAAkB,MAEAlC,GAAAoC,OAAA,EAAA,EACAf,SAAAG,UAAAxB,GAGA,MAAAgB,QAGAF,sDCpGA,SAAAC,OAAAJ,SAAA,YAKA,mBAAAC,SAAAA,OAAAC,IAEAD,QACA,yBACA,SAAAE,WACA,MAAAH,SAAAI,OAAAD,aAEA,gBAAAL,SAAAA,OAAAJ,QAEAI,OAAAJ,QAAAM,QACAI,OACAhB,QAAA,eAIAgB,OAAAuB,aAAA3B,QACAI,OACAA,OAAAD,YAIAC,OAIA,SAAAA,OAAAD,WAEA,YAQA,SAAAyB,QAAAzC,EAAA0C,GACA,IAAA,GAAAC,QAAAD,GACA1C,EAAA2C,MAAAD,EAAAC,KAEA,OAAA3C,GAIA,QAAA4C,WAAAC,KACA,GAAAC,OACA,IAAAC,MAAAC,QAAAH,KAEAC,IAAAD,QACA,IAAA,gBAAAA,KAAApC,OAEA,IAAA,GAAAP,GAAA,EAAAA,EAAA2C,IAAApC,OAAAP,IACA4C,IAAAlB,KAAAiB,IAAA3C,QAIA4C,KAAAlB,KAAAiB,IAEA,OAAAC,KAUA,QAAAG,cAAAC,KAAAC,QAAAC,UAEA,KAAAlC,eAAA+B,eACA,MAAA,IAAAA,cAAAC,KAAAC,QAAAC,SAGA,iBAAAF,QACAA,KAAAG,SAAAC,iBAAAJ,OAGAhC,KAAAqC,SAAAX,UAAAM,MACAhC,KAAAiC,QAAAV,UAAAvB,KAAAiC,SAEA,kBAAAA,SACAC,SAAAD,QAEAV,OAAAvB,KAAAiC,QAAAA,SAGAC,UACAlC,KAAAG,GAAA,SAAA+B,UAGAlC,KAAAsC,YAEAC,IAEAvC,KAAAwC,WAAA,GAAAD,GAAAE,UAIAC,WAAA,WACA1C,KAAA2C,SACAC,KAAA5C,OA6IA,QAAA6C,cAAAC,KACA9C,KAAA8C,IAAAA,IA+DA,QAAAC,YAAAC,IAAAC,SACAjD,KAAAgD,IAAAA,IACAhD,KAAAiD,QAAAA,QACAjD,KAAA8C,IAAA,GAAAI,OAvRA,GAAAX,GAAAxC,OAAAoD,OACAC,QAAArD,OAAAqD,OAyEArB,cAAA7B,UAAAmD,OAAAC,OAAAxD,UAAAI,WAEA6B,aAAA7B,UAAA+B,WAEAF,aAAA7B,UAAAoC,UAAA,WACAtC,KAAAuD,UAGAvD,KAAAqC,SAAAmB,QAAAxD,KAAAyD,iBAAAzD,OAMA+B,aAAA7B,UAAAuD,iBAAA,SAAAzB,MAEA,OAAAA,KAAA0B,UACA1D,KAAA2D,SAAA3B,MAGAhC,KAAAiC,QAAA2B,cAAA,GACA5D,KAAA6D,2BAAA7B,KAKA,IAAA8B,UAAA9B,KAAA8B,QACA,IAAAA,UAAAC,iBAAAD,UAAA,CAKA,IAAA,GAFAE,WAAAhC,KAAAI,iBAAA,OAEApD,EAAA,EAAAA,EAAAgF,UAAAzE,OAAAP,IAAA,CACA,GAAA8D,KAAAkB,UAAAhF,EACAgB,MAAA2D,SAAAb,KAIA,GAAA,gBAAA9C,MAAAiC,QAAA2B,WAAA,CACA,GAAAK,UAAAjC,KAAAI,iBAAApC,KAAAiC,QAAA2B,WACA,KAAA5E,EAAA,EAAAA,EAAAiF,SAAA1E,OAAAP,IAAA,CACA,GAAAkF,OAAAD,SAAAjF,EACAgB,MAAA6D,2BAAAK,UAKA,IAAAH,mBACAvE,GAAA,EACA2E,GAAA,EACAC,IAAA,EA2MA,OAxMArC,cAAA7B,UAAA2D,2BAAA,SAAA7B,MACA,GAAAqC,OAAAC,iBAAAtC,KACA,IAAAqC,MAOA,IAFA,GAAAE,OAAA,0BACAC,QAAAD,MAAAE,KAAAJ,MAAAK,iBACA,OAAAF,SAAA,CACA,GAAAxB,KAAAwB,SAAAA,QAAA,EACAxB,MACAhD,KAAA2E,cAAA3B,IAAAhB,MAEAwC,QAAAD,MAAAE,KAAAJ,MAAAK,mBAOA3C,aAAA7B,UAAAyD,SAAA,SAAAb,KACA,GAAA8B,cAAA,GAAA/B,cAAAC,IACA9C,MAAAuD,OAAA7C,KAAAkE,eAGA7C,aAAA7B,UAAAyE,cAAA,SAAA3B,IAAAhB,MACA,GAAA4B,YAAA,GAAAb,YAAAC,IAAAhB,KACAhC,MAAAuD,OAAA7C,KAAAkD,aAGA7B,aAAA7B,UAAAyC,MAAA,WAUA,QAAAkC,YAAAC,MAAA9C,KAAA+C,SAEArC,WAAA,WACAsC,MAAAC,SAAAH,MAAA9C,KAAA+C,WAZA,GAAAC,OAAAhF,IAIA,IAHAA,KAAAkF,gBAAA,EACAlF,KAAAmF,cAAA,GAEAnF,KAAAuD,OAAAhE,OAEA,WADAS,MAAAoF,UAWApF,MAAAuD,OAAAC,QAAA,SAAAoB,cACAA,aAAAjE,KAAA,WAAAkE,YACAD,aAAAjC,WAIAZ,aAAA7B,UAAA+E,SAAA,SAAAH,MAAA9C,KAAA+C,SACA/E,KAAAkF,kBACAlF,KAAAmF,aAAAnF,KAAAmF,eAAAL,MAAAO,SAEArF,KAAAiB,UAAA,YAAAjB,KAAA8E,MAAA9C,OACAhC,KAAAwC,YAAAxC,KAAAwC,WAAA8C,QACAtF,KAAAwC,WAAA8C,OAAAtF,KAAA8E,OAGA9E,KAAAkF,iBAAAlF,KAAAuD,OAAAhE,QACAS,KAAAoF,WAGApF,KAAAiC,QAAAsD,OAAAnC,SACAA,QAAAoC,IAAA,aAAAT,QAAAD,MAAA9C,OAIAD,aAAA7B,UAAAkF,SAAA,WACA,GAAAhF,WAAAJ,KAAAmF,aAAA,OAAA,MAIA,IAHAnF,KAAAyF,YAAA,EACAzF,KAAAiB,UAAAb,WAAAJ,OACAA,KAAAiB,UAAA,UAAAjB,OACAA,KAAAwC,WAAA,CACA,GAAAkD,UAAA1F,KAAAmF,aAAA,SAAA,SACAnF,MAAAwC,WAAAkD,UAAA1F,QAUA6C,aAAA3C,UAAAmD,OAAAC,OAAAxD,UAAAI,WAEA2C,aAAA3C,UAAAyC,MAAA,WAIA,GADA3C,KAAA2F,qBAIA,WADA3F,MAAA4F,QAAA,IAAA5F,KAAA8C,IAAA+C,aAAA,eAKA7F,MAAA8F,WAAA,GAAA5C,OACAlD,KAAA8F,WAAAC,iBAAA,OAAA/F,MACAA,KAAA8F,WAAAC,iBAAA,QAAA/F,MAEAA,KAAA8C,IAAAiD,iBAAA,OAAA/F,MACAA,KAAA8C,IAAAiD,iBAAA,QAAA/F,MACAA,KAAA8F,WAAAE,IAAAhG,KAAA8C,IAAAkD,KAGAnD,aAAA3C,UAAAyF,mBAAA,WACA,MAAA3F,MAAA8C,IAAAsC,UAAAa,SAAAjG,KAAA8C,IAAA+C,cAGAhD,aAAA3C,UAAA0F,QAAA,SAAAP,SAAAN,SACA/E,KAAAqF,SAAAA,SACArF,KAAAiB,UAAA,YAAAjB,KAAAA,KAAA8C,IAAAiC,WAMAlC,aAAA3C,UAAAgG,YAAA,SAAAC,OACA,GAAAC,QAAA,KAAAD,MAAAE,IACArG,MAAAoG,SACApG,KAAAoG,QAAAD,QAIAtD,aAAA3C,UAAAoG,OAAA,WACAtG,KAAA4F,SAAA,EAAA,UACA5F,KAAAuG,gBAGA1D,aAAA3C,UAAAsG,QAAA,WACAxG,KAAA4F,SAAA,EAAA,WACA5F,KAAAuG,gBAGA1D,aAAA3C,UAAAqG,aAAA,WACAvG,KAAA8F,WAAAW,oBAAA,OAAAzG,MACAA,KAAA8F,WAAAW,oBAAA,QAAAzG,MACAA,KAAA8C,IAAA2D,oBAAA,OAAAzG,MACAA,KAAA8C,IAAA2D,oBAAA,QAAAzG,OAYA+C,WAAA7C,UAAAmD,OAAAC,OAAAT,aAAA3C,WAEA6C,WAAA7C,UAAAyC,MAAA,WACA3C,KAAA8C,IAAAiD,iBAAA,OAAA/F,MACAA,KAAA8C,IAAAiD,iBAAA,QAAA/F,MACAA,KAAA8C,IAAAkD,IAAAhG,KAAAgD,IAEAhD,KAAA2F,uBAEA3F,KAAA4F,QAAA,IAAA5F,KAAA8C,IAAA+C,aAAA,gBACA7F,KAAAuG,iBAIAxD,WAAA7C,UAAAqG,aAAA,WACAvG,KAAA8C,IAAA2D,oBAAA,OAAAzG,MACAA,KAAA8C,IAAA2D,oBAAA,QAAAzG,OAGA+C,WAAA7C,UAAA0F,QAAA,SAAAP,SAAAN,SACA/E,KAAAqF,SAAAA,SACArF,KAAAiB,UAAA,YAAAjB,KAAAA,KAAAiD,QAAA8B,WAKAhD,aAAA2E,iBAAA,SAAAvD,SACAA,OAAAA,QAAApD,OAAAoD,UAKAZ,EAAAY,OAEAZ,EAAAoE,GAAArF,aAAA,SAAAW,QAAA2E,UAEA,MADA,IAAA7E,cAAA/B,KAAAiC,QAAA2E,UACApE,WAAAqE,QAAAtE,EAAAvC,UAIA+B,aAAA2E,mBAIA3E,uECxWA,SAAApC,SACA,kBAAAC,SAAAA,OAAAC,IACAD,OAAAD,SAEA,SAAAF,QAAAA,OAAAJ,QACAI,OAAAJ,QAAAM,UAEAI,OAAA+G,IAAAnH,QAAAL,KAAAU,OAEA,WACA,GAEA+G,QAUAC,kBAAA,SAAA5G,WACA,GAAA+F,OAAAhE,SAAA8E,YAAA,QACAd,OAAAe,UAAA,OAAA9G,WAAA,GAAA,GACA+B,SAAAgF,cAAAhB,QAYAiB,oBAAA,SAAAC,MACA,GAAAC,OAAA,GAAAC,QAAA,SAAAF,KAAAG,QAAA,OAAA,OAAAA,QAAA,OAAA,OAAA,aACAC,QAAAH,MAAA7C,KAAAiD,SAAAC,OAEA,OAAA,QAAAF,QACA,GAGAG,mBAAAH,QAAA,GAAAD,QAAA,MAAA,OAaAK,eAAA,SAAAtJ,EAAAuJ,UACA,GAAA,MAAAA,SAAAC,SAEAxJ,EAAAyJ,OAAAC,MAAA,GAAAV,QAAAO,SAAAC,QAAA,MAGA,OAAA,GAgBAG,aAAA,SAAAC,GAAAC,YAAArD,SAGA,OAFA,MAAAoD,GAAAC,YAAArD,SAEAsD,KAzEA,UAoFAC,kBAAA,SAAAH,IACA,GAAAI,OAAA,MAAAJ,GAAA,SAAA,OAEA,OAAA,IAAAZ,QAAA,IAAAgB,KAAAF,KAvFA,SAuFA,MAQAG,wBAAA,WAIA,IAAA,GAHAjJ,QAAAwH,IAAA0B,kBAAAlJ,OAGAmJ,IAAAnJ,OAAA,EAAAmJ,KAAA,EAAAA,MAAA,CACA,GAAAC,UAAA5B,IAAA0B,kBAAAC,IAEAC,UAAAC,GAAAC,qBAAA,UAAAtJ,QACAoJ,SAAAC,GAAAC,qBAAA,UAAA,GAAAC,eAKA/B,IAAA0B,kBAAAzH,OAAA0H,IAAA,IAk1BA,OAv0BA3B,KAAA0B,qBASA1B,IAAAgC,SAAA,SAAAC,kBACA,GAAA3G,UAAAF,SAAAC,iBAAA,mDACA7C,OAAA8C,SAAA9C,MAGAiJ,0BACA,KAAA,GAAAE,KAAA,EAAAA,IAAAnJ,SAAAmJ,IAAA,CACA,GAAAzF,SAAAZ,SAAAqG,IAMAzF,SAAAgG,aAAA,4BAAA,IAGA,KAAAhG,QAAAkF,KACAlF,QAAAkF,GAAA,OAAAO,IAGA,IAAA1C,KAAA/C,QAAAiG,aAAA,gBAIApB,UAAAC,QAAA,SAAAoB,MAAA,SAAA9B,KAAA,SAAAc,GAAA,SACAiB,QAAA,SAAAC,gBAAA,UACAC,eAAA,SAAAC,eAAA,SACAC,eAAA,WAEAC,SAEA,KAAA,GAAAC,aAAA5B,UAEA,GAAA,OAAA7E,QAAAiG,aAAA,YAAAQ,WACA,OAAA5B,SAAA4B,YACA,IAAA,UACAD,OAAAC,aAAA,UAAAzG,QAAAiG,aAAA,YAAAQ,WACA,MACA,KAAA,SACAD,OAAAC,WAAAzG,QAAAiG,aAAA,YAAAQ,UACA,MACA,SACAtG,QAAAuG,IAAA,+BAMA,GAAAC,QAAA,GAAA7C,KAAA8C,OAAA5G,QAAAkF,GAAAnC,IAAAyD,OACA1C,KAAA0B,kBAAA/H,KAAAkJ,QAQA,MAJAZ,mBACAhC,kBAAA,mBAGAD,IAAA0B,mBAsBA1B,IAAA8C,OAAA,SAAA1B,GAAAnF,IAAAyG,QAQAzJ,KAAAmI,GAAAA,GAQAnI,KAAAgD,IAAAA,IASAhD,KAAA4I,GAAAzG,SAAA2H,eAAA3B,IASAnI,KAAA+J,OAAA,KAQA/J,KAAA8H,UACAC,QAAA,IACAyB,gBAAA,EACAF,eAAA,YACAC,eAAAxJ,OAAA2H,SAAAsC,MASAhK,KAAAiK,aAAA3B,kBAAAtI,KAAAmI,IAQAnI,KAAAkK,mBAGAT,OAAAA,WASAzJ,KAAAmK,iBAAA,WAEA,GAAAC,OAAApK,KAAA4I,GAAAyB,YAAAC,UAGAtK,MAAA+J,OAAA5H,SAAAoI,cAAA,SAGA,IAAAC,MAAA,GACAC,UAAAzK,KAAAgD,IAAAvC,QAAA,IAwDA,KAtDAgK,WAAA,IACAD,KAAAxK,KAAAgD,IAAA0H,UAAAD,UAAAzK,KAAAgD,IAAAzD,QACAS,KAAAgD,IAAAhD,KAAAgD,IAAA0H,UAAA,EAAAD,YAKAzK,KAAAgD,IAAAvC,QAAA,KAAA,EACAT,KAAAgD,KAAA,IAEAhD,KAAAgD,KAAA,IAKAhD,KAAA+J,OAAA/D,IAAAhG,KAAAgD,IAAA,gBAAAoH,MACA,YAAApK,KAAAmI,GAEAnI,KAAA8H,SAAA0B,iBACAxJ,KAAA+J,OAAA/D,KAAA,gBAAA2E,mBAAAxI,SAAAgH,OACAnJ,KAAA+J,OAAA/D,KAAA,IAAAhG,KAAA8H,SAAAwB,eAAA,IAAAqB,mBAAA3K,KAAA8H,SAAAyB,iBAEAvJ,KAAA+J,OAAA/D,KAAAwE,KAGAxK,KAAA+J,OAAAd,aAAA,QAAA,QACAjJ,KAAA+J,OAAAd,aAAA,YAAA,MACAjJ,KAAA+J,OAAAd,aAAA,eAAA,KACAjJ,KAAA+J,OAAAd,aAAA,cAAA,KAEAjJ,KAAA8H,SAAAqB,OACAnJ,KAAA+J,OAAAd,aAAA,QAAAjJ,KAAA8H,SAAAqB,OAGAlD,SAAAjG,KAAA8H,SAAAuB,iBAAArJ,KAAA8H,SAAAuB,mBAAA,GACArJ,KAAA+J,OAAAd,aAAA,kBAAA,IAGAhD,SAAAjG,KAAA8H,SAAAsB,SAAA,gBAAApJ,MAAA8H,SAAAsB,SACApJ,KAAA+J,OAAAd,aAAA,UAAAjJ,KAAA8H,SAAAsB,SAGApJ,KAAA8H,SAAAK,KACAhG,SAAA2H,eAAA9J,KAAA8H,SAAAK,KACAnI,KAAA+J,OAAAd,aAAA,KAAAjJ,KAAA8H,SAAAK,KAIAnI,KAAA8H,SAAAT,MACArH,KAAA+J,OAAAd,aAAA,OAAAjJ,KAAA8H,SAAAT,MAKArH,KAAA4I,GAAAgC,YAAA5K,KAAA4I,GAAAiC,YAAA7K,KAAA4I,GAAAgC,WAEA5K,MAAA4I,GAAAkC,YAAA9K,KAAA+J,QAGAhK,OAAAgG,iBAAA,SAAA/F,KAAA+K,YAUA/K,KAAA+K,UAAA,WACA/K,KAAAgL,aACApI,KAAA5C,MAYAA,KAAAiL,MAAA,SAAA7C,YAAArD,SACA,GAAAqD,cAAApI,MAAAkK,gBACA,IAAA,GAAAlL,GAAA,EAAAA,EAAAgB,KAAAkK,gBAAA9B,aAAA7I,OAAAP,IACAgB,KAAAkK,gBAAA9B,aAAApJ,GAAAM,KAAAU,KAAA+E,UAYA/E,KAAAkL,OAAA,WACAnL,OAAA0G,oBAAA,UAAAzG,KAAAmL,iBACApL,OAAA0G,oBAAA,SAAAzG,KAAA+K,WAEA/K,KAAA4I,GAAAiC,YAAA7K,KAAA+J,QAEAvB,2BAYAxI,KAAAmL,gBAAA,SAAA5M,GAEA,GAAAsJ,eAAAtJ,EAAAyB,KAAA8H,WAKA,gBAAAvJ,GAAA6M,KAAA,CAKA,GAAAnD,OAAA1J,EAAA6M,KAAAnD,MAAAjI,KAAAiK,aAGA,KAAAhC,OAAA,IAAAA,MAAA1I,OACA,OAAA,CAGA,IAAA6I,aAAAH,MAAA,GACAlD,QAAAkD,MAAA,EAEAjI,MAAAiL,MAAA7C,YAAArD,WACAnC,KAAA5C,MAWAA,KAAAqL,iBAAA,SAAAtG,SAIA,GAAAuG,QAAAC,SAAAxG,QAEA/E,MAAA+J,OAAAd,aAAA,SAAAqC,OAAA,OAYAtL,KAAAwL,qBAAA,SAAAzG,SAIA5C,SAAAuF,SAAAsC,KAAAjF,SAYA/E,KAAAyL,2BAAA,SAAA1G,SAGA,GAAA2G,WAAAvJ,SAAA2H,eAAA9J,KAAAmI,IAAAwD,wBAAAC,IAAA7L,OAAA8L,YAEAC,YAAAJ,UAAAH,SAAAxG,QACAhF,QAAAgM,SAAA,EAAAD,cAeA9L,KAAAgM,UAAA,SAAA5D,YAAAxB,UACAwB,cAAApI,MAAAkK,kBACAlK,KAAAkK,gBAAA9B,iBAGApI,KAAAkK,gBAAA9B,aAAA1H,KAAAkG,WAkBA5G,KAAAiM,YAAA,SAAA7D,YAAArD,SAEA/E,KAAA4I,GAAAC,qBAAA,UAAAtJ,SACAS,KAAA4I,GAAAC,qBAAA,UAAA,GAAAC,cACA9I,KAAA4I,GAAAC,qBAAA,UAAA,GAAAC,cACAoD,YAAAhE,aAAAlI,KAAAmI,GAAAC,YAAArD,SAAA,KAIA/E,KAAAkL,WAcAlL,KAAAgL,UAAA,WACA,GAAAZ,OAAApK,KAAA4I,GAAAyB,YAAAC,UACAtK,MAAAiM,YAAA,QAAA7B,OAIA,KAAA,GAAA+B,OAAA1C,QACAzJ,KAAA8H,SAAAqE,KAAA1C,OAAA0C,IAcA,OAVAnM,MAAAgM,UAAA,SAAAhM,KAAAqL,kBACArL,KAAAgM,UAAA,aAAAhM,KAAAwL,sBACAxL,KAAAgM,UAAA,mBAAAhM,KAAAyL,4BAGA1L,OAAAgG,iBAAA,UAAA/F,KAAAmL,iBAAA,GAGAnL,KAAAmK,mBAEAnK,MAeA+G,IAAAqF,MAAA,SAAA3C,QAQAzJ,KAAAqM,YAAA,KAQArM,KAAAmI,GAAA,KAQAnI,KAAAsM,YAAA,KAQAtM,KAAAuM,UAAA,KASAvM,KAAA8H,UACA0E,eAAA,KACAzE,QAAA,IACA0E,QAAA,EACAnD,eAAA,aAUAtJ,KAAA0M,QAAA,KAQA1M,KAAAiK,aAAA,KAQAjK,KAAAkK,mBAGAT,OAAAA,WAcAzJ,KAAAgM,UAAA,SAAA5D,YAAAxB,UAEAwB,cAAApI,MAAAkK,kBACAlK,KAAAkK,gBAAA9B,iBAGApI,KAAAkK,gBAAA9B,aAAA1H,KAAAkG,WAmBA5G,KAAAiL,MAAA,SAAA7C,YAAArD,SAIA,GAAAqD,cAAApI,MAAAkK,gBACA,IAAA,GAAAlL,GAAA,EAAAA,EAAAgB,KAAAkK,gBAAA9B,aAAA7I,OAAAP,IACAgB,KAAAkK,gBAAA9B,aAAApJ,GAAAM,KAAAU,KAAA+E,UAcA/E,KAAAmL,gBAAA,SAAA5M,GAKA,GAAAsJ,eAAAtJ,EAAAyB,KAAA8H,WAKA,gBAAAvJ,GAAA6M,KAAA,CAKA,GAAAnD,OAAA1J,EAAA6M,KAAAnD,MAAAjI,KAAAiK,aAGA,IAAAhC,OAAA,IAAAA,MAAA1I,OAAA,CAEA,GAAA6I,aAAAH,MAAA,GACAlD,QAAAkD,MAAA,EAEAjI,MAAAiL,MAAA7C,YAAArD,YACAnC,KAAA5C,MAWAA,KAAA2M,gBAAA,SAAA5H,SAIA,GAAAqF,OAAAmB,SAAAxG,QAGAqF,SAAApK,KAAAqM,cACArM,KAAAqM,YAAAjC,MAGApK,KAAA8H,SAAA0E,gBACAxM,KAAA8H,SAAA0E,eAAApC,OAIApK,KAAA4M,eAcA5M,KAAAiM,YAAA,SAAA7D,YAAArD,SAIAhF,OAAA6J,OAAAsC,YAAAhE,aAAAlI,KAAAmI,GAAAC,YAAArD,SAAA,MAYA/E,KAAA4M,WAAA,WAEA,GAAAtB,QAAAnJ,SAAA0G,qBAAA,QAAA,GAAAgE,aAAAvC,UAKA,OAFAtK,MAAAiM,YAAA,SAAAX,QAEAA,QACA1I,KAAA5C,MAWAA,KAAA8M,eAAA,SAAAtC,MACAxK,KAAAiM,YAAA,aAAA,IAAAzB,OAYAxK,KAAA+M,iBAAA,SAAA/J,KACAhD,KAAAiM,YAAA,aAAAjJ,MAYAhD,KAAAgN,sBAAA,SAAA7E,IAGA,GAAA8E,QAAA9K,SAAA2H,eAAA3B,IAAAwD,wBAAAC,IAAA7L,OAAA8L,WACA7L,MAAAkN,uBAAAD,SAYAjN,KAAAkN,uBAAA,SAAAC,KACAnN,KAAAiM,YAAA,mBAAAkB,IAAA7C,YA+CAtK,MAAAkL,OAAA,WACAnL,OAAA0G,oBAAA,UAAAzG,KAAAmL,iBACAnL,KAAA0M,SACAU,cAAApN,KAAA0M,SAKA,KAAA,GAAAP,OAAA1C,QACAzJ,KAAA8H,SAAAqE,KAAA1C,OAAA0C,IAIAnM,MAAAmI,GAAAf,oBAAA,YAAAqC,OAAAtB,GACAnI,KAAAiK,aAAA,GAAA1C,QAAA,YAAAvH,KAAAmI,GAr5BA,wBAw5BA,IAAAiC,OAAAmB,SAAAnE,oBAAA,gBA6BA,OA1BApH,MAAAuM,UAAAnF,oBAAApH,KAAA8H,SAAAwB,gBAGAtJ,KAAAsM,YAAAlF,oBAAA,eAGApH,KAAAgM,UAAA,QAAAhM,KAAA2M,iBAGA5M,OAAAgG,iBAAA,UAAA/F,KAAAmL,iBAAA,GAGAnL,KAAA8H,SAAA0E,gBACAxM,KAAA8H,SAAA0E,eAAApC,OAIApK,KAAA4M,aAGA5M,KAAA8H,SAAA2E,UACAzM,KAAA0M,QAAA3M,OAAAsN,YAAArN,KAAA4M,WAAA5M,KAAA8H,SAAA2E,UA3EA,SAAAa,wBACA,GACAC,iBADAC,YAAArL,SAAA0G,qBAAA,QAAA,GAEA4E,oBAAAD,YAAAE,SACA,KAEAH,gBADAxN,OAAA4N,OAAA5N,OAAA6L,IACA,WAEA,eAEA,MAAArN,GACAgP,gBAAA,WAEAE,oBAAAhN,QAAA8M,iBAAA,IACAC,YAAAE,UAAAD,oBAAAA,oBAAA,IAAAF,gBAAAA,gBACAD,wBACAA,uBAAAC,iBAEAvG,kBAAA,qBA4DAyC,OAAA6D,wBAEAtN,MAKA,mBAAAmC,WACA4E,IAAAgC,UAAA,GAGAhC,8IC/8BA,GAAA6G,eAAA7O,QAAA,qEACA8O,KAAA9O,QAAA,6CAEM+O,SAAW,GAAIC,OAAAC,QAAI5B,OAGzB,EAAA6B,eAAAD,SAAa,UAAW,WAAA,MAAMF,UAASlB","file":"scripts.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * EvEmitter v1.0.3\n * Lil' event emitter\n * MIT License\n */\n\n/* jshint unused: true, undef: true, strict: true */\n\n( function( global, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, window */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory();\n  } else {\n    // Browser globals\n    global.EvEmitter = factory();\n  }\n\n}( typeof window != 'undefined' ? window : this, function() {\n\n\"use strict\";\n\nfunction EvEmitter() {}\n\nvar proto = EvEmitter.prototype;\n\nproto.on = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // set events hash\n  var events = this._events = this._events || {};\n  // set listeners array\n  var listeners = events[ eventName ] = events[ eventName ] || [];\n  // only add once\n  if ( listeners.indexOf( listener ) == -1 ) {\n    listeners.push( listener );\n  }\n\n  return this;\n};\n\nproto.once = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // add event\n  this.on( eventName, listener );\n  // set once flag\n  // set onceEvents hash\n  var onceEvents = this._onceEvents = this._onceEvents || {};\n  // set onceListeners object\n  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};\n  // set flag\n  onceListeners[ listener ] = true;\n\n  return this;\n};\n\nproto.off = function( eventName, listener ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  var index = listeners.indexOf( listener );\n  if ( index != -1 ) {\n    listeners.splice( index, 1 );\n  }\n\n  return this;\n};\n\nproto.emitEvent = function( eventName, args ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  var i = 0;\n  var listener = listeners[i];\n  args = args || [];\n  // once stuff\n  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];\n\n  while ( listener ) {\n    var isOnce = onceListeners && onceListeners[ listener ];\n    if ( isOnce ) {\n      // remove listener\n      // remove before trigger to prevent recursion\n      this.off( eventName, listener );\n      // unset once flag\n      delete onceListeners[ listener ];\n    }\n    // trigger listener\n    listener.apply( this, args );\n    // get next listener\n    i += isOnce ? 0 : 1;\n    listener = listeners[i];\n  }\n\n  return this;\n};\n\nreturn EvEmitter;\n\n}));\n","/*!\n * imagesLoaded v4.1.1\n * JavaScript is all like \"You images are done yet or what?\"\n * MIT License\n */\n\n( function( window, factory ) { 'use strict';\n  // universal module definition\n\n  /*global define: false, module: false, require: false */\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'ev-emitter/ev-emitter'\n    ], function( EvEmitter ) {\n      return factory( window, EvEmitter );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('ev-emitter')\n    );\n  } else {\n    // browser global\n    window.imagesLoaded = factory(\n      window,\n      window.EvEmitter\n    );\n  }\n\n})( window,\n\n// --------------------------  factory -------------------------- //\n\nfunction factory( window, EvEmitter ) {\n\n'use strict';\n\nvar $ = window.jQuery;\nvar console = window.console;\n\n// -------------------------- helpers -------------------------- //\n\n// extend objects\nfunction extend( a, b ) {\n  for ( var prop in b ) {\n    a[ prop ] = b[ prop ];\n  }\n  return a;\n}\n\n// turn element or nodeList into an array\nfunction makeArray( obj ) {\n  var ary = [];\n  if ( Array.isArray( obj ) ) {\n    // use object if already an array\n    ary = obj;\n  } else if ( typeof obj.length == 'number' ) {\n    // convert nodeList to array\n    for ( var i=0; i < obj.length; i++ ) {\n      ary.push( obj[i] );\n    }\n  } else {\n    // array of single index\n    ary.push( obj );\n  }\n  return ary;\n}\n\n// -------------------------- imagesLoaded -------------------------- //\n\n/**\n * @param {Array, Element, NodeList, String} elem\n * @param {Object or Function} options - if function, use as callback\n * @param {Function} onAlways - callback function\n */\nfunction ImagesLoaded( elem, options, onAlways ) {\n  // coerce ImagesLoaded() without new, to be new ImagesLoaded()\n  if ( !( this instanceof ImagesLoaded ) ) {\n    return new ImagesLoaded( elem, options, onAlways );\n  }\n  // use elem as selector string\n  if ( typeof elem == 'string' ) {\n    elem = document.querySelectorAll( elem );\n  }\n\n  this.elements = makeArray( elem );\n  this.options = extend( {}, this.options );\n\n  if ( typeof options == 'function' ) {\n    onAlways = options;\n  } else {\n    extend( this.options, options );\n  }\n\n  if ( onAlways ) {\n    this.on( 'always', onAlways );\n  }\n\n  this.getImages();\n\n  if ( $ ) {\n    // add jQuery Deferred object\n    this.jqDeferred = new $.Deferred();\n  }\n\n  // HACK check async to allow time to bind listeners\n  setTimeout( function() {\n    this.check();\n  }.bind( this ));\n}\n\nImagesLoaded.prototype = Object.create( EvEmitter.prototype );\n\nImagesLoaded.prototype.options = {};\n\nImagesLoaded.prototype.getImages = function() {\n  this.images = [];\n\n  // filter & find items if we have an item selector\n  this.elements.forEach( this.addElementImages, this );\n};\n\n/**\n * @param {Node} element\n */\nImagesLoaded.prototype.addElementImages = function( elem ) {\n  // filter siblings\n  if ( elem.nodeName == 'IMG' ) {\n    this.addImage( elem );\n  }\n  // get background image on element\n  if ( this.options.background === true ) {\n    this.addElementBackgroundImages( elem );\n  }\n\n  // find children\n  // no non-element nodes, #143\n  var nodeType = elem.nodeType;\n  if ( !nodeType || !elementNodeTypes[ nodeType ] ) {\n    return;\n  }\n  var childImgs = elem.querySelectorAll('img');\n  // concat childElems to filterFound array\n  for ( var i=0; i < childImgs.length; i++ ) {\n    var img = childImgs[i];\n    this.addImage( img );\n  }\n\n  // get child background images\n  if ( typeof this.options.background == 'string' ) {\n    var children = elem.querySelectorAll( this.options.background );\n    for ( i=0; i < children.length; i++ ) {\n      var child = children[i];\n      this.addElementBackgroundImages( child );\n    }\n  }\n};\n\nvar elementNodeTypes = {\n  1: true,\n  9: true,\n  11: true\n};\n\nImagesLoaded.prototype.addElementBackgroundImages = function( elem ) {\n  var style = getComputedStyle( elem );\n  if ( !style ) {\n    // Firefox returns null if in a hidden iframe https://bugzil.la/548397\n    return;\n  }\n  // get url inside url(\"...\")\n  var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\n  var matches = reURL.exec( style.backgroundImage );\n  while ( matches !== null ) {\n    var url = matches && matches[2];\n    if ( url ) {\n      this.addBackground( url, elem );\n    }\n    matches = reURL.exec( style.backgroundImage );\n  }\n};\n\n/**\n * @param {Image} img\n */\nImagesLoaded.prototype.addImage = function( img ) {\n  var loadingImage = new LoadingImage( img );\n  this.images.push( loadingImage );\n};\n\nImagesLoaded.prototype.addBackground = function( url, elem ) {\n  var background = new Background( url, elem );\n  this.images.push( background );\n};\n\nImagesLoaded.prototype.check = function() {\n  var _this = this;\n  this.progressedCount = 0;\n  this.hasAnyBroken = false;\n  // complete if no images\n  if ( !this.images.length ) {\n    this.complete();\n    return;\n  }\n\n  function onProgress( image, elem, message ) {\n    // HACK - Chrome triggers event before object properties have changed. #83\n    setTimeout( function() {\n      _this.progress( image, elem, message );\n    });\n  }\n\n  this.images.forEach( function( loadingImage ) {\n    loadingImage.once( 'progress', onProgress );\n    loadingImage.check();\n  });\n};\n\nImagesLoaded.prototype.progress = function( image, elem, message ) {\n  this.progressedCount++;\n  this.hasAnyBroken = this.hasAnyBroken || !image.isLoaded;\n  // progress event\n  this.emitEvent( 'progress', [ this, image, elem ] );\n  if ( this.jqDeferred && this.jqDeferred.notify ) {\n    this.jqDeferred.notify( this, image );\n  }\n  // check if completed\n  if ( this.progressedCount == this.images.length ) {\n    this.complete();\n  }\n\n  if ( this.options.debug && console ) {\n    console.log( 'progress: ' + message, image, elem );\n  }\n};\n\nImagesLoaded.prototype.complete = function() {\n  var eventName = this.hasAnyBroken ? 'fail' : 'done';\n  this.isComplete = true;\n  this.emitEvent( eventName, [ this ] );\n  this.emitEvent( 'always', [ this ] );\n  if ( this.jqDeferred ) {\n    var jqMethod = this.hasAnyBroken ? 'reject' : 'resolve';\n    this.jqDeferred[ jqMethod ]( this );\n  }\n};\n\n// --------------------------  -------------------------- //\n\nfunction LoadingImage( img ) {\n  this.img = img;\n}\n\nLoadingImage.prototype = Object.create( EvEmitter.prototype );\n\nLoadingImage.prototype.check = function() {\n  // If complete is true and browser supports natural sizes,\n  // try to check for image status manually.\n  var isComplete = this.getIsImageComplete();\n  if ( isComplete ) {\n    // report based on naturalWidth\n    this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\n    return;\n  }\n\n  // If none of the checks above matched, simulate loading on detached element.\n  this.proxyImage = new Image();\n  this.proxyImage.addEventListener( 'load', this );\n  this.proxyImage.addEventListener( 'error', this );\n  // bind to image as well for Firefox. #191\n  this.img.addEventListener( 'load', this );\n  this.img.addEventListener( 'error', this );\n  this.proxyImage.src = this.img.src;\n};\n\nLoadingImage.prototype.getIsImageComplete = function() {\n  return this.img.complete && this.img.naturalWidth !== undefined;\n};\n\nLoadingImage.prototype.confirm = function( isLoaded, message ) {\n  this.isLoaded = isLoaded;\n  this.emitEvent( 'progress', [ this, this.img, message ] );\n};\n\n// ----- events ----- //\n\n// trigger specified handler for event type\nLoadingImage.prototype.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\nLoadingImage.prototype.onload = function() {\n  this.confirm( true, 'onload' );\n  this.unbindEvents();\n};\n\nLoadingImage.prototype.onerror = function() {\n  this.confirm( false, 'onerror' );\n  this.unbindEvents();\n};\n\nLoadingImage.prototype.unbindEvents = function() {\n  this.proxyImage.removeEventListener( 'load', this );\n  this.proxyImage.removeEventListener( 'error', this );\n  this.img.removeEventListener( 'load', this );\n  this.img.removeEventListener( 'error', this );\n};\n\n// -------------------------- Background -------------------------- //\n\nfunction Background( url, element ) {\n  this.url = url;\n  this.element = element;\n  this.img = new Image();\n}\n\n// inherit LoadingImage prototype\nBackground.prototype = Object.create( LoadingImage.prototype );\n\nBackground.prototype.check = function() {\n  this.img.addEventListener( 'load', this );\n  this.img.addEventListener( 'error', this );\n  this.img.src = this.url;\n  // check if image is already complete\n  var isComplete = this.getIsImageComplete();\n  if ( isComplete ) {\n    this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\n    this.unbindEvents();\n  }\n};\n\nBackground.prototype.unbindEvents = function() {\n  this.img.removeEventListener( 'load', this );\n  this.img.removeEventListener( 'error', this );\n};\n\nBackground.prototype.confirm = function( isLoaded, message ) {\n  this.isLoaded = isLoaded;\n  this.emitEvent( 'progress', [ this, this.element, message ] );\n};\n\n// -------------------------- jQuery -------------------------- //\n\nImagesLoaded.makeJQueryPlugin = function( jQuery ) {\n  jQuery = jQuery || window.jQuery;\n  if ( !jQuery ) {\n    return;\n  }\n  // set local variable\n  $ = jQuery;\n  // $().imagesLoaded()\n  $.fn.imagesLoaded = function( options, callback ) {\n    var instance = new ImagesLoaded( this, options, callback );\n    return instance.jqDeferred.promise( $(this) );\n  };\n};\n// try making plugin\nImagesLoaded.makeJQueryPlugin();\n\n// --------------------------  -------------------------- //\n\nreturn ImagesLoaded;\n\n});\n","/*! pym.js - v1.2.0 - 2017-03-08 */\n/*\n* Pym.js is library that resizes an iframe based on the width of the parent and the resulting height of the child.\n* Check out the docs at http://blog.apps.npr.org/pym.js/ or the readme at README.md for usage.\n*/\n\n/** @module pym */\n(function(factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    }\n    else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = factory();\n    } else {\n        window.pym = factory.call(this);\n    }\n})(function() {\n    var MESSAGE_DELIMITER = 'xPYMx';\n\n    var lib = {};\n\n    /**\n    * Create and dispatch a custom pym event\n    *\n    * @method _raiseCustomEvent\n    * @inner\n    *\n    * @param {String} eventName\n    */\n   var _raiseCustomEvent = function(eventName) {\n     var event = document.createEvent('Event');\n     event.initEvent('pym:' + eventName, true, true);\n     document.dispatchEvent(event);\n   };\n\n    /**\n    * Generic function for parsing URL params.\n    * Via http://stackoverflow.com/questions/901115/how-can-i-get-query-string-values-in-javascript\n    *\n    * @method _getParameterByName\n    * @inner\n    *\n    * @param {String} name The name of the paramter to get from the URL.\n    */\n    var _getParameterByName = function(name) {\n        var regex = new RegExp(\"[\\\\?&]\" + name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]') + '=([^&#]*)');\n        var results = regex.exec(location.search);\n\n        if (results === null) {\n            return '';\n        }\n\n        return decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n    };\n\n    /**\n     * Check the message to make sure it comes from an acceptable xdomain.\n     * Defaults to '*' but can be overriden in config.\n     *\n     * @method _isSafeMessage\n     * @inner\n     *\n     * @param {Event} e The message event.\n     * @param {Object} settings Configuration.\n     */\n    var _isSafeMessage = function(e, settings) {\n        if (settings.xdomain !== '*') {\n            // If origin doesn't match our xdomain, return.\n            if (!e.origin.match(new RegExp(settings.xdomain + '$'))) { return; }\n        }\n\n        return true;\n    };\n\n    /**\n     * Construct a message to send between frames.\n     *\n     * NB: We use string-building here because JSON message passing is\n     * not supported in all browsers.\n     *\n     * @method _makeMessage\n     * @inner\n     *\n     * @param {String} id The unique id of the message recipient.\n     * @param {String} messageType The type of message to send.\n     * @param {String} message The message to send.\n     */\n    var _makeMessage = function(id, messageType, message) {\n        var bits = ['pym', id, messageType, message];\n\n        return bits.join(MESSAGE_DELIMITER);\n    };\n\n    /**\n     * Construct a regex to validate and parse messages.\n     *\n     * @method _makeMessageRegex\n     * @inner\n     *\n     * @param {String} id The unique id of the message recipient.\n     */\n    var _makeMessageRegex = function(id) {\n        var bits = ['pym', id, '(\\\\S+)', '(.*)'];\n\n        return new RegExp('^' + bits.join(MESSAGE_DELIMITER) + '$');\n    };\n\n    /**\n     * Clean autoInit Instances: those that point to contentless iframes\n     * @method _cleanAutoInitInstances\n     * @inner\n     */\n    var _cleanAutoInitInstances = function() {\n        var length = lib.autoInitInstances.length;\n\n        // Loop backwards to avoid index issues\n        for (var idx = length - 1; idx >= 0; idx--) {\n            var instance = lib.autoInitInstances[idx];\n            // If instance has been removed or is contentless then remove it\n            if (instance.el.getElementsByTagName('iframe').length &&\n                instance.el.getElementsByTagName('iframe')[0].contentWindow) {\n                continue;\n            }\n            else {\n                // Remove the reference to the removed or orphan instance\n                lib.autoInitInstances.splice(idx,1);\n            }\n        }\n    };\n\n    /**\n     * Store auto initialized Pym instances for further reference\n     * @name module:pym#autoInitInstances\n     * @type Array\n     * @default []\n     */\n    lib.autoInitInstances = [];\n\n    /**\n     * Initialize Pym for elements on page that have data-pym attributes.\n     * Expose autoinit in case we need to call it from the outside\n     * @instance\n     * @method autoInit\n     * @param {Boolean} doNotRaiseEvents flag to avoid sending custom events\n     */\n    lib.autoInit = function(doNotRaiseEvents) {\n        var elements = document.querySelectorAll('[data-pym-src]:not([data-pym-auto-initialized])');\n        var length = elements.length;\n\n        // Clean stored instances in case needed\n        _cleanAutoInitInstances();\n        for (var idx = 0; idx < length; ++idx) {\n            var element = elements[idx];\n            /*\n            * Mark automatically-initialized elements so they are not\n            * re-initialized if the user includes pym.js more than once in the\n            * same document.\n            */\n            element.setAttribute('data-pym-auto-initialized', '');\n\n            // Ensure elements have an id\n            if (element.id === '') {\n                element.id = 'pym-' + idx;\n            }\n\n            var src = element.getAttribute('data-pym-src');\n\n            // List of data attributes to configure the component\n            // structure: {'attribute name': 'type'}\n            var settings = {'xdomain': 'string', 'title': 'string', 'name': 'string', 'id': 'string',\n                            'sandbox': 'string', 'allowfullscreen': 'boolean',\n                            'parenturlparam': 'string', 'parenturlvalue': 'string',\n                            'optionalparams': 'boolean'};\n\n            var config = {};\n\n            for (var attribute in settings) {\n                // via https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute#Notes\n               if (element.getAttribute('data-pym-'+attribute) !== null) {\n                  switch (settings[attribute]) {\n                    case 'boolean':\n                       config[attribute] = !(element.getAttribute('data-pym-'+attribute) === 'false'); // jshint ignore:line\n                       break;\n                    case 'string':\n                       config[attribute] = element.getAttribute('data-pym-'+attribute);\n                       break;\n                    default:\n                       console.err('unrecognized attribute type');\n                  }\n               }\n            }\n\n            // Store references to autoinitialized pym instances\n            var parent = new lib.Parent(element.id, src, config);\n            lib.autoInitInstances.push(parent);\n        }\n\n        // Fire customEvent\n        if (!doNotRaiseEvents) {\n            _raiseCustomEvent(\"pym-initialized\");\n        }\n        // Return stored autoinitalized pym instances\n        return lib.autoInitInstances;\n    };\n\n    /**\n     * The Parent half of a response iframe.\n     *\n     * @memberof module:pym\n     * @class Parent\n     * @param {String} id The id of the div into which the iframe will be rendered. sets {@link module:pym.Parent~id}\n     * @param {String} url The url of the iframe source. sets {@link module:pym.Parent~url}\n     * @param {Object} [config] Configuration for the parent instance. sets {@link module:pym.Parent~settings}\n     * @param {string} [config.xdomain='*'] - xdomain to validate messages received\n     * @param {string} [config.title] - if passed it will be assigned to the iframe title attribute\n     * @param {string} [config.name] - if passed it will be assigned to the iframe name attribute\n     * @param {string} [config.id] - if passed it will be assigned to the iframe id attribute\n     * @param {boolean} [config.allowfullscreen] - if passed and different than false it will be assigned to the iframe allowfullscreen attribute\n     * @param {string} [config.sandbox] - if passed it will be assigned to the iframe sandbox attribute (we do not validate the syntax so be careful!!)\n     * @param {string} [config.parenturlparam] - if passed it will be override the default parentUrl query string parameter name passed to the iframe src\n     * @param {string} [config.parenturlvalue] - if passed it will be override the default parentUrl query string parameter value passed to the iframe src\n     * @param {string} [config.optionalparams] - if passed and different than false it will strip the querystring params parentUrl and parentTitle passed to the iframe src\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe iFrame}\n     */\n    lib.Parent = function(id, url, config) {\n        /**\n         * The id of the container element\n         *\n         * @memberof module:pym.Parent\n         * @member {string} id\n         * @inner\n         */\n        this.id = id;\n        /**\n         * The url that will be set as the iframe's src\n         *\n         * @memberof module:pym.Parent\n         * @member {String} url\n         * @inner\n         */\n        this.url = url;\n\n        /**\n         * The container DOM object\n         *\n         * @memberof module:pym.Parent\n         * @member {HTMLElement} el\n         * @inner\n         */\n        this.el = document.getElementById(id);\n        /**\n         * The contained child iframe\n         *\n         * @memberof module:pym.Parent\n         * @member {HTMLElement} iframe\n         * @inner\n         * @default null\n         */\n        this.iframe = null;\n        /**\n         * The parent instance settings, updated by the values passed in the config object\n         *\n         * @memberof module:pym.Parent\n         * @member {Object} settings\n         * @inner\n         */\n        this.settings = {\n            xdomain: '*',\n            optionalparams: true,\n            parenturlparam: 'parentUrl',\n            parenturlvalue: window.location.href\n        };\n        /**\n         * RegularExpression to validate the received messages\n         *\n         * @memberof module:pym.Parent\n         * @member {String} messageRegex\n         * @inner\n         */\n        this.messageRegex = _makeMessageRegex(this.id);\n        /**\n         * Stores the registered messageHandlers for each messageType\n         *\n         * @memberof module:pym.Parent\n         * @member {Object} messageHandlers\n         * @inner\n         */\n        this.messageHandlers = {};\n\n        // ensure a config object\n        config = (config || {});\n\n        /**\n         * Construct the iframe.\n         *\n         * @memberof module:pym.Parent\n         * @method _constructIframe\n         * @inner\n         */\n        this._constructIframe = function() {\n            // Calculate the width of this element.\n            var width = this.el.offsetWidth.toString();\n\n            // Create an iframe element attached to the document.\n            this.iframe = document.createElement('iframe');\n\n            // Save fragment id\n            var hash = '';\n            var hashIndex = this.url.indexOf('#');\n\n            if (hashIndex > -1) {\n                hash = this.url.substring(hashIndex, this.url.length);\n                this.url = this.url.substring(0, hashIndex);\n            }\n\n            // If the URL contains querystring bits, use them.\n            // Otherwise, just create a set of valid params.\n            if (this.url.indexOf('?') < 0) {\n                this.url += '?';\n            } else {\n                this.url += '&';\n            }\n\n            // Append the initial width as a querystring parameter\n            // and optional params if configured to do so\n            this.iframe.src = this.url + 'initialWidth=' + width +\n                                         '&childId=' + this.id;\n\n            if (this.settings.optionalparams) {\n                this.iframe.src += '&parentTitle=' + encodeURIComponent(document.title);\n                this.iframe.src += '&'+ this.settings.parenturlparam + '=' + encodeURIComponent(this.settings.parenturlvalue);\n            }\n            this.iframe.src +=hash;\n\n            // Set some attributes to this proto-iframe.\n            this.iframe.setAttribute('width', '100%');\n            this.iframe.setAttribute('scrolling', 'no');\n            this.iframe.setAttribute('marginheight', '0');\n            this.iframe.setAttribute('frameborder', '0');\n\n            if (this.settings.title) {\n                this.iframe.setAttribute('title', this.settings.title);\n            }\n\n            if (this.settings.allowfullscreen !== undefined && this.settings.allowfullscreen !== false) {\n                this.iframe.setAttribute('allowfullscreen','');\n            }\n\n            if (this.settings.sandbox !== undefined && typeof this.settings.sandbox === 'string') {\n                this.iframe.setAttribute('sandbox', this.settings.sandbox);\n            }\n\n            if (this.settings.id) {\n                if (!document.getElementById(this.settings.id)) {\n                    this.iframe.setAttribute('id', this.settings.id);\n                }\n            }\n\n            if (this.settings.name) {\n                this.iframe.setAttribute('name', this.settings.name);\n            }\n\n            // Replace the child content if needed\n            // (some CMSs might strip out empty elements)\n            while(this.el.firstChild) { this.el.removeChild(this.el.firstChild); }\n            // Append the iframe to our element.\n            this.el.appendChild(this.iframe);\n\n            // Add an event listener that will handle redrawing the child on resize.\n            window.addEventListener('resize', this._onResize);\n        };\n\n        /**\n         * Send width on resize.\n         *\n         * @memberof module:pym.Parent\n         * @method _onResize\n         * @inner\n         */\n        this._onResize = function() {\n            this.sendWidth();\n        }.bind(this);\n\n        /**\n         * Fire all event handlers for a given message type.\n         *\n         * @memberof module:pym.Parent\n         * @method _fire\n         * @inner\n         *\n         * @param {String} messageType The type of message.\n         * @param {String} message The message data.\n         */\n        this._fire = function(messageType, message) {\n            if (messageType in this.messageHandlers) {\n                for (var i = 0; i < this.messageHandlers[messageType].length; i++) {\n                   this.messageHandlers[messageType][i].call(this, message);\n                }\n            }\n        };\n\n        /**\n         * Remove this parent from the page and unbind it's event handlers.\n         *\n         * @memberof module:pym.Parent\n         * @method remove\n         * @instance\n         */\n        this.remove = function() {\n            window.removeEventListener('message', this._processMessage);\n            window.removeEventListener('resize', this._onResize);\n\n            this.el.removeChild(this.iframe);\n            // _cleanAutoInitInstances in case this parent was autoInitialized\n            _cleanAutoInitInstances();\n        };\n\n        /**\n         * Process a new message from the child.\n         *\n         * @memberof module:pym.Parent\n         * @method _processMessage\n         * @inner\n         *\n         * @param {Event} e A message event.\n         */\n        this._processMessage = function(e) {\n            // First, punt if this isn't from an acceptable xdomain.\n            if (!_isSafeMessage(e, this.settings)) {\n                return;\n            }\n\n            // Discard object messages, we only care about strings\n            if (typeof e.data !== 'string') {\n                return;\n            }\n\n            // Grab the message from the child and parse it.\n            var match = e.data.match(this.messageRegex);\n\n            // If there's no match or too many matches in the message, punt.\n            if (!match || match.length !== 3) {\n                return false;\n            }\n\n            var messageType = match[1];\n            var message = match[2];\n\n            this._fire(messageType, message);\n        }.bind(this);\n\n        /**\n         * Resize iframe in response to new height message from child.\n         *\n         * @memberof module:pym.Parent\n         * @method _onHeightMessage\n         * @inner\n         *\n         * @param {String} message The new height.\n         */\n        this._onHeightMessage = function(message) {\n            /*\n             * Handle parent height message from child.\n             */\n            var height = parseInt(message);\n\n            this.iframe.setAttribute('height', height + 'px');\n        };\n\n        /**\n         * Navigate parent to a new url.\n         *\n         * @memberof module:pym.Parent\n         * @method _onNavigateToMessage\n         * @inner\n         *\n         * @param {String} message The url to navigate to.\n         */\n        this._onNavigateToMessage = function(message) {\n            /*\n             * Handle parent scroll message from child.\n             */\n            document.location.href = message;\n        };\n\n        /**\n         * Scroll parent to a given child position.\n         *\n         * @memberof module:pym.Parent\n         * @method _onScrollToChildPosMessage\n         * @inner\n         *\n         * @param {String} message The offset inside the child page.\n         */\n        this._onScrollToChildPosMessage = function(message) {\n            // Get the child container position using getBoundingClientRect + pageYOffset\n            // via https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n            var iframePos = document.getElementById(this.id).getBoundingClientRect().top + window.pageYOffset;\n\n            var totalOffset = iframePos + parseInt(message);\n            window.scrollTo(0, totalOffset);\n        };\n\n        /**\n         * Bind a callback to a given messageType from the child.\n         *\n         * Reserved message names are: \"height\", \"scrollTo\" and \"navigateTo\".\n         *\n         * @memberof module:pym.Parent\n         * @method onMessage\n         * @instance\n         *\n         * @param {String} messageType The type of message being listened for.\n         * @param {module:pym.Parent~onMessageCallback} callback The callback to invoke when a message of the given type is received.\n         */\n        this.onMessage = function(messageType, callback) {\n            if (!(messageType in this.messageHandlers)) {\n                this.messageHandlers[messageType] = [];\n            }\n\n            this.messageHandlers[messageType].push(callback);\n        };\n\n        /**\n         * @callback module:pym.Parent~onMessageCallback\n         * @param {String} message The message data.\n         */\n\n        /**\n         * Send a message to the the child.\n         *\n         * @memberof module:pym.Parent\n         * @method sendMessage\n         * @instance\n         *\n         * @param {String} messageType The type of message to send.\n         * @param {String} message The message data to send.\n         */\n        this.sendMessage = function(messageType, message) {\n            // When used alongside with pjax some references are lost\n            if (this.el.getElementsByTagName('iframe').length) {\n                if (this.el.getElementsByTagName('iframe')[0].contentWindow) {\n                    this.el.getElementsByTagName('iframe')[0].contentWindow\n                        .postMessage(_makeMessage(this.id, messageType, message), '*');\n                }\n                else {\n                    // Contentless child detected remove listeners and iframe\n                    this.remove();\n                }\n            }\n        };\n\n        /**\n         * Transmit the current iframe width to the child.\n         *\n         * You shouldn't need to call this directly.\n         *\n         * @memberof module:pym.Parent\n         * @method sendWidth\n         * @instance\n         */\n        this.sendWidth = function() {\n            var width = this.el.offsetWidth.toString();\n            this.sendMessage('width', width);\n        };\n\n        // Add any overrides to settings coming from config.\n        for (var key in config) {\n            this.settings[key] = config[key];\n        }\n\n        // Bind required message handlers\n        this.onMessage('height', this._onHeightMessage);\n        this.onMessage('navigateTo', this._onNavigateToMessage);\n        this.onMessage('scrollToChildPos', this._onScrollToChildPosMessage);\n\n        // Add a listener for processing messages from the child.\n        window.addEventListener('message', this._processMessage, false);\n\n        // Construct the iframe in the container element.\n        this._constructIframe();\n\n        return this;\n    };\n\n    /**\n     * The Child half of a responsive iframe.\n     *\n     * @memberof module:pym\n     * @class Child\n     * @param {Object} [config] Configuration for the child instance. sets {@link module:pym.Child~settings}\n     * @param {function} [config.renderCallback=null] Callback invoked after receiving a resize event from the parent, sets {@link module:pym.Child#settings.renderCallback}\n     * @param {string} [config.xdomain='*'] - xdomain to validate messages received\n     * @param {number} [config.polling=0] - polling frequency in milliseconds to send height to parent\n     * @param {number} [config.id] - parent container id used when navigating the child iframe to a new page but we want to keep it responsive.\n     * @param {string} [config.parenturlparam] - if passed it will be override the default parentUrl query string parameter name expected on the iframe src\n     */\n    lib.Child = function(config) {\n        /**\n         * The initial width of the parent page\n         *\n         * @memberof module:pym.Child\n         * @member {string} parentWidth\n         * @inner\n         */\n        this.parentWidth = null;\n        /**\n         * The id of the parent container\n         *\n         * @memberof module:pym.Child\n         * @member {String} id\n         * @inner\n         */\n        this.id = null;\n        /**\n         * The title of the parent page from document.title.\n         *\n         * @memberof module:pym.Child\n         * @member {String} parentTitle\n         * @inner\n         */\n        this.parentTitle = null;\n        /**\n         * The URL of the parent page from window.location.href.\n         *\n         * @memberof module:pym.Child\n         * @member {String} parentUrl\n         * @inner\n         */\n        this.parentUrl = null;\n        /**\n         * The settings for the child instance. Can be overriden by passing a config object to the child constructor\n         * i.e.: var pymChild = new pym.Child({renderCallback: render, xdomain: \"\\\\*\\.npr\\.org\"})\n         *\n         * @memberof module:pym.Child.settings\n         * @member {Object} settings - default settings for the child instance\n         * @inner\n         */\n        this.settings = {\n            renderCallback: null,\n            xdomain: '*',\n            polling: 0,\n            parenturlparam: 'parentUrl'\n        };\n\n        /**\n         * The timerId in order to be able to stop when polling is enabled\n         *\n         * @memberof module:pym.Child\n         * @member {String} timerId\n         * @inner\n         */\n        this.timerId = null;\n        /**\n         * RegularExpression to validate the received messages\n         *\n         * @memberof module:pym.Child\n         * @member {String} messageRegex\n         * @inner\n         */\n        this.messageRegex = null;\n        /**\n         * Stores the registered messageHandlers for each messageType\n         *\n         * @memberof module:pym.Child\n         * @member {Object} messageHandlers\n         * @inner\n         */\n        this.messageHandlers = {};\n\n        // Ensure a config object\n        config = (config || {});\n\n        /**\n         * Bind a callback to a given messageType from the child.\n         *\n         * Reserved message names are: \"width\".\n         *\n         * @memberof module:pym.Child\n         * @method onMessage\n         * @instance\n         *\n         * @param {String} messageType The type of message being listened for.\n         * @param {module:pym.Child~onMessageCallback} callback The callback to invoke when a message of the given type is received.\n         */\n        this.onMessage = function(messageType, callback) {\n\n            if (!(messageType in this.messageHandlers)) {\n                this.messageHandlers[messageType] = [];\n            }\n\n            this.messageHandlers[messageType].push(callback);\n        };\n\n        /**\n         * @callback module:pym.Child~onMessageCallback\n         * @param {String} message The message data.\n         */\n\n\n        /**\n         * Fire all event handlers for a given message type.\n         *\n         * @memberof module:pym.Child\n         * @method _fire\n         * @inner\n         *\n         * @param {String} messageType The type of message.\n         * @param {String} message The message data.\n         */\n        this._fire = function(messageType, message) {\n            /*\n             * Fire all event handlers for a given message type.\n             */\n            if (messageType in this.messageHandlers) {\n                for (var i = 0; i < this.messageHandlers[messageType].length; i++) {\n                   this.messageHandlers[messageType][i].call(this, message);\n                }\n            }\n        };\n\n        /**\n         * Process a new message from the parent.\n         *\n         * @memberof module:pym.Child\n         * @method _processMessage\n         * @inner\n         *\n         * @param {Event} e A message event.\n         */\n        this._processMessage = function(e) {\n            /*\n            * Process a new message from parent frame.\n            */\n            // First, punt if this isn't from an acceptable xdomain.\n            if (!_isSafeMessage(e, this.settings)) {\n                return;\n            }\n\n            // Discard object messages, we only care about strings\n            if (typeof e.data !== 'string') {\n                return;\n            }\n\n            // Get the message from the parent.\n            var match = e.data.match(this.messageRegex);\n\n            // If there's no match or it's a bad format, punt.\n            if (!match || match.length !== 3) { return; }\n\n            var messageType = match[1];\n            var message = match[2];\n\n            this._fire(messageType, message);\n        }.bind(this);\n\n        /**\n         * Resize iframe in response to new width message from parent.\n         *\n         * @memberof module:pym.Child\n         * @method _onWidthMessage\n         * @inner\n         *\n         * @param {String} message The new width.\n         */\n        this._onWidthMessage = function(message) {\n            /*\n             * Handle width message from the child.\n             */\n            var width = parseInt(message);\n\n            // Change the width if it's different.\n            if (width !== this.parentWidth) {\n                this.parentWidth = width;\n\n                // Call the callback function if it exists.\n                if (this.settings.renderCallback) {\n                    this.settings.renderCallback(width);\n                }\n\n                // Send the height back to the parent.\n                this.sendHeight();\n            }\n        };\n\n        /**\n         * Send a message to the the Parent.\n         *\n         * @memberof module:pym.Child\n         * @method sendMessage\n         * @instance\n         *\n         * @param {String} messageType The type of message to send.\n         * @param {String} message The message data to send.\n         */\n        this.sendMessage = function(messageType, message) {\n            /*\n             * Send a message to the parent.\n             */\n            window.parent.postMessage(_makeMessage(this.id, messageType, message), '*');\n        };\n\n        /**\n         * Transmit the current iframe height to the parent.\n         *\n         * Call this directly in cases where you manually alter the height of the iframe contents.\n         *\n         * @memberof module:pym.Child\n         * @method sendHeight\n         * @instance\n         */\n        this.sendHeight = function() {\n            // Get the child's height.\n            var height = document.getElementsByTagName('body')[0].offsetHeight.toString();\n\n            // Send the height to the parent.\n            this.sendMessage('height', height);\n\n            return height;\n        }.bind(this);\n\n        /**\n         * Scroll parent to a given element id.\n         *\n         * @memberof module:pym.Child\n         * @method scrollParentTo\n         * @instance\n         *\n         * @param {String} hash The id of the element to scroll to.\n         */\n        this.scrollParentTo = function(hash) {\n            this.sendMessage('navigateTo', '#' + hash);\n        };\n\n        /**\n         * Navigate parent to a given url.\n         *\n         * @memberof module:pym.Child\n         * @method navigateParentTo\n         * @instance\n         *\n         * @param {String} url The url to navigate to.\n         */\n        this.navigateParentTo = function(url) {\n            this.sendMessage('navigateTo', url);\n        };\n\n        /**\n         * Scroll parent to a given child element id.\n         *\n         * @memberof module:pym.Child\n         * @method scrollParentToChildEl\n         * @instance\n         *\n         * @param {String} id The id of the child element to scroll to.\n         */\n        this.scrollParentToChildEl = function(id) {\n            // Get the child element position using getBoundingClientRect + pageYOffset\n            // via https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n            var topPos = document.getElementById(id).getBoundingClientRect().top + window.pageYOffset;\n            this.scrollParentToChildPos(topPos);\n        };\n\n        /**\n         * Scroll parent to a particular child offset.\n         *\n         * @memberof module:pym.Child\n         * @method scrollParentToChildPos\n         * @instance\n         *\n         * @param {Number} pos The offset of the child element to scroll to.\n         */\n        this.scrollParentToChildPos = function(pos) {\n            this.sendMessage('scrollToChildPos', pos.toString());\n        };\n\n        /**\n         * Mark Whether the child is embedded or not\n         * executes a callback in case it was passed to the config\n         *\n         * @memberof module:pym.Child\n         * @method _markWhetherEmbedded\n         * @inner\n         *\n         * @param {module:pym.Child~onMarkedEmbeddedStatus} The callback to execute after determining whether embedded or not.\n         */\n        var _markWhetherEmbedded = function(onMarkedEmbeddedStatus) {\n          var htmlElement = document.getElementsByTagName('html')[0],\n              newClassForHtml,\n              originalHtmlClasses = htmlElement.className;\n          try {\n            if(window.self !== window.top) {\n              newClassForHtml = \"embedded\";\n            }else{\n              newClassForHtml = \"not-embedded\";\n            }\n          }catch(e) {\n            newClassForHtml = \"embedded\";\n          }\n          if(originalHtmlClasses.indexOf(newClassForHtml) < 0) {\n            htmlElement.className = originalHtmlClasses ? originalHtmlClasses + ' ' + newClassForHtml : newClassForHtml;\n            if(onMarkedEmbeddedStatus){\n              onMarkedEmbeddedStatus(newClassForHtml);\n            }\n            _raiseCustomEvent(\"marked-embedded\");\n          }\n        };\n\n        /**\n         * @callback module:pym.Child~onMarkedEmbeddedStatus\n         * @param {String} classname \"embedded\" or \"not-embedded\".\n         */\n\n        /**\n         * Unbind child event handlers and timers.\n         *\n         * @memberof module:pym.Child\n         * @method remove\n         * @instance\n         */\n        this.remove = function() {\n            window.removeEventListener('message', this._processMessage);\n            if (this.timerId) {\n                clearInterval(this.timerId);\n            }\n        };\n\n        // Initialize settings with overrides.\n        for (var key in config) {\n            this.settings[key] = config[key];\n        }\n\n        // Identify what ID the parent knows this child as.\n        this.id = _getParameterByName('childId') || config.id;\n        this.messageRegex = new RegExp('^pym' + MESSAGE_DELIMITER + this.id + MESSAGE_DELIMITER + '(\\\\S+)' + MESSAGE_DELIMITER + '(.*)$');\n\n        // Get the initial width from a URL parameter.\n        var width = parseInt(_getParameterByName('initialWidth'));\n\n        // Get the url of the parent frame\n        this.parentUrl = _getParameterByName(this.settings.parenturlparam);\n\n        // Get the title of the parent frame\n        this.parentTitle = _getParameterByName('parentTitle');\n\n        // Bind the required message handlers\n        this.onMessage('width', this._onWidthMessage);\n\n        // Set up a listener to handle any incoming messages.\n        window.addEventListener('message', this._processMessage, false);\n\n        // If there's a callback function, call it.\n        if (this.settings.renderCallback) {\n            this.settings.renderCallback(width);\n        }\n\n        // Send the initial height to the parent.\n        this.sendHeight();\n\n        // If we're configured to poll, create a setInterval to handle that.\n        if (this.settings.polling) {\n            this.timerId = window.setInterval(this.sendHeight, this.settings.polling);\n        }\n\n        _markWhetherEmbedded(config.onMarkedEmbeddedStatus);\n\n        return this;\n    };\n\n    // Initialize elements with pym data attributes\n    // if we are not in server configuration\n    if(typeof document !== \"undefined\") {\n        lib.autoInit(true);\n    }\n\n    return lib;\n});\n\n","import imagesLoaded from 'imagesloaded';\nimport pym from 'pym.js';\n\nconst pymChild = new pym.Child();\n\n\nimagesLoaded('#six-up', () => pymChild.sendHeight());\n"]}